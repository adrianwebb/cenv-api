parents:
    - module: percona
      profile: aws/config

    - module: redis
      profile: aws/config

    - aws/core

config:
    ssh_firewall: "?> @admin_subnet_public_ip ? 'ssh-external' | 'ssh-internal'"

certificate:
    "@admin_cluster_name":
        provider: aws
        network: "@aws_networks"
        domain: "@root_domain"
        groups: "@admin_cluster_group"

subnet:
    admin-a:
        when_in: "@aws_admin_cluster_subnets"
        network: "@aws_networks"
        cidr_prefix: "@admin_subnet_cidr_prefix"
        zone_suffix: a
        use_public_ip: "@admin_subnet_public_ip"
        nat_subnet: "?> not @admin_subnet_public_ip ? 'nat-a' | None"
        groups: "@admin_cluster_group"

    admin-b:
        when_in: "@aws_admin_cluster_subnets"
        network: "@aws_networks"
        cidr_prefix: "@admin_subnet_cidr_prefix"
        zone_suffix: b
        use_public_ip: "@admin_subnet_public_ip"
        nat_subnet: "?> not @admin_subnet_public_ip ? 'nat-b' | None"
        groups: "@admin_cluster_group"

    admin-c:
        when_in: "@aws_admin_cluster_subnets"
        network: "@aws_networks"
        cidr_prefix: "@admin_subnet_cidr_prefix"
        zone_suffix: c
        use_public_ip: "@admin_subnet_public_ip"
        nat_subnet: "?> not @admin_subnet_public_ip ? 'nat-c' | None"
        groups: "@admin_cluster_group"

storage:
    "@{admin_cluster_name}-lib":
        provider: efs
        network: "@aws_networks"
        performance_mode: "@aws_storage_performance_mode"
        throughput_mode: "@aws_storage_throughput_mode"
        provisioned_throughput: "@aws_storage_provisioned_throughput"
        encrypted: "@aws_storage_encrypted"
        groups: "@admin_cluster_group"

mount:
    "@{admin_cluster_name}-lib":
        storage: "@{admin_cluster_name}-lib"
        network: "@aws_networks"
        subnet: "@aws_admin_cluster_subnets"
        groups: "@admin_cluster_group"
        firewalls: "@storage_firewalls"

server:
    "@admin_cluster_name":
        count: 1
        provider: ec2
        network: "@aws_networks"
        subnet: "@aws_admin_cluster_subnets"
        image: "@aws_ubuntu_image[<network>]"
        ssh_port: "@ssh_port"
        user: "@aws_ubuntu_user"
        machine: "@aws_admin_machine"
        tenancy: "@aws_admin_tenancy"
        monitoring: "@aws_admin_monitoring"
        ebs_optimized: "@aws_admin_ebs_optimized"
        groups: "@admin_cluster_group"
        volumes:
            "@admin_lib_dir":
                type: nfs4
                location: "&{storage_mount(network=<network>;subnet=<subnet>):@{admin_cluster_name}-lib:remote_host}:/"
                options: "@aws_efs_volume_options"
                mode: "0770"
        firewalls:
            - internet
            - "@ssh_firewall"
            - admin-command-external
            - admin-data-external

load_balancer:
    "@{admin_cluster_name}":
        provider: aws_application
        network: "@aws_networks"
        subnets: "@aws_admin_cluster_subnets"
        domain: "@root_domain"
        internal: false
        idle_timeout: "@aws_admin_lb_timeout"
        groups: "@admin_cluster_group"
        firewalls:
            - internet
            - admin-command-external
            - admin-data-external
        listeners:
            command:
                port: "@admin_command_port"
                certificate: "@admin_cluster_name"
                target_port: "@admin_command_port"
                target_protocol: https
                health_check_path: "@aws_admin_lb_health_path"
                health_check_interval: "@aws_admin_lb_health_check_interval"
                health_check_timeout: "@aws_admin_lb_health_timeout"
                healthy_status: "@aws_admin_lb_healthy_status"
                healthy_threshold: "@aws_admin_lb_healthy_threshold"
                unhealthy_threshold: "@aws_admin_lb_unhealthy_threshold"
                server_groups: "@admin_cluster_group"
            data:
                port: "@admin_data_port"
                certificate: "@admin_cluster_name"
                target_port: "@admin_data_port"
                target_protocol: https
                health_check_path: "@aws_admin_lb_health_path"
                health_check_interval: "@aws_admin_lb_health_check_interval"
                health_check_timeout: "@aws_admin_lb_health_timeout"
                healthy_status: "@aws_admin_lb_healthy_status"
                healthy_threshold: "@aws_admin_lb_healthy_threshold"
                unhealthy_threshold: "@aws_admin_lb_unhealthy_threshold"
                server_groups: "@admin_cluster_group"

post_run:
    zimagi-credentials:
        server_search: groups.name=@admin_cluster_group

    zimagi-user-environment:
        servers: groups.name=@admin_cluster_group

    percona-cluster-db:
        module: percona
        task: database
        servers: groups.name=percona
        databases_present:
            "@admin_cluster_database":
                collation: utf8_general_ci
                encoding: utf8

    percona-cluster-user:
        requires: percona-cluster-user
        module: percona
        task: user
        servers: groups.name=percona
        users_present:
            "@admin_cluster_database_user":
                password: "@admin_cluster_password"
                privileges:
                    - "@admin_cluster_database.*:ALL"
                host: "%"

    zimagi-app-environment:
        scopes:
            network: "@aws_networks"
        servers:
            - subnet.network.name=<network>
            - groups.name=@admin_cluster_group
        env:
            ZIMAGI_MYSQL_HOST: "&load_balancer(network=<network>):percona-db:variables[lb_dns_name]"
            ZIMAGI_MYSQL_PORT: "@percona_port"
            ZIMAGI_MYSQL_DB: "@admin_cluster_database"
            ZIMAGI_MYSQL_USER: "@admin_cluster_database_user"
            ZIMAGI_MYSQL_PASSWORD: "@admin_cluster_password"
            ZIMAGI_REDIS_TYPE: sentinel
            ZIMAGI_REDIS_HOST: "&load_balancer(network=<network>):redis-sentinel:variables[lb_dns_name]"
            ZIMAGI_REDIS_PORT: "@redis_sentinel_port"
            ZIMAGI_REDIS_PASSWORD: "@admin_cluster_redis_password"
            ZIMAGI_ALLOWED_HOSTS: "@admin_cluster_allowed_hosts"

    zimagi-cluster:
        servers: groups.name=@admin_cluster_group
        requires:
            - percona-cluster-user
            - zimagi-app-environment

    zimagi-wait:
        wait_hosts: "&>server(network=@aws_networks;subnet=@aws_admin_cluster_subnets):@{admin_cluster_name}*:ip"

    deploy-zimagi:
        server_search: id=&server(network=@aws_networks[0];subnet=@aws_admin_cluster_subnets[0]):@{admin_cluster_name}1:id
